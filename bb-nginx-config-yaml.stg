/*
* Mandatory:
* 
* vars.nginx.hosts[]
* vars.nginx.workerProcesses
* vars.nginx.workerConnections
* vars.nginx.clientMaxBodySize
*
*/

bb-nginx-config-yaml(parent, vars) ::= <<
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: cloud-muellerpublic-de
  labels:
    app: nginx
    tier: frontend
    group: cloud-muellerpublic-de
data:
  nginx.conf: |
    #user  nginx;
    worker_processes  <vars.nginx.workerProcesses>;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  <vars.nginx.workerConnections>;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        gzip  on;
        index index.php index.html index.htm;
        client_max_body_size <vars.nginx.clientMaxBodySize>;
<rest(vars.nginx.hosts):redirectHost(parent, vars);separator="\n">
        server {
            listen 9090 default_server;
            listen [::]:9090 default_server;
            root /var/www/html;
            server_name <first(vars.nginx.hosts)>;
            index index.php;
            # Add headers to serve security related headers
            # Before enabling Strict-Transport-Security headers please read into this topic first.
            #add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Robots-Tag none;
            add_header X-Download-Options noopen;
            add_header X-Permitted-Cross-Domain-Policies none;
            #
            location = /favicon.ico {
              log_not_found off;
              access_log off;
            }
            #
            location = /robots.txt {
              allow all;
              log_not_found off;
              access_log off;
            }
            # The following 2 rules are only needed for the user_webfinger app.
            # Uncomment it if you're planning to use this app.
            #rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
            #rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;
            #
            location = /.well-known/carddav {
                return 301 $scheme://$host/remote.php/dav;
            }
            location = /.well-known/caldav {
                return 301 $scheme://$host/remote.php/dav;
            }
            # Deny all attempts to access hidden files such as .htaccess, 
            # .htpasswd, .DS_Store (Mac). 
            # Keep logging the requests to parse later (or to pass to firewall
            # utilities such as fail2ban)
            location ~ /\. {
              deny all;
            }
            #
            fastcgi_buffers 64 4K;
            # Disable gzip to avoid the removal of the ETag header
            # Enabling gzip would also make your server vulnerable to BREACH
            # if no additional measures are done.
            # See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=773332
            gzip off;
            # Uncomment if your server is build with the ngx_pagespeed module
            # This module is currently not supported.
            #pagespeed off;
            #
            error_page 403 /core/templates/403.php;
            error_page 404 /core/templates/404.php;
            #
            location / {
                rewrite ^ /index.php$uri;
            }
            #
            location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
                return 404;
            }
            location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
                return 404;
            }
            #
            location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) {
                fastcgi_split_path_info ^(.+\.php)(/.*)$;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param SCRIPT_NAME $fastcgi_script_name; # necessary for owncloud to detect the contextroot https://github.com/owncloud/core/blob/v10.0.0/lib/private/AppFramework/Http/Request.php#L603
                fastcgi_param PATH_INFO $fastcgi_path_info;
                fastcgi_param HTTPS off;
                fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
                fastcgi_param front_controller_active true;
                fastcgi_read_timeout 180; # increase default timeout e.g. for long running carddav/ caldav syncs with 1000+ entries
                fastcgi_pass owncloud-php:9000;
                fastcgi_intercept_errors on;
                fastcgi_request_buffering off; #Available since NGINX 1.7.11
            }
            #
            location ~ ^/(?:updater|ocs-provider)(?:$|/) {
                try_files $uri $uri/ =404;
                index index.php;
            }
            # Adding the cache control header for js and css files
            # Make sure it is BELOW the PHP block
            location ~ \.(?:css|js)$ {
                try_files $uri /index.php$uri$is_args$args;
                add_header Cache-Control "max-age=15778463";
                # Add headers to serve security related headers (It is intended to have those duplicated to the ones above)
                # Before enabling Strict-Transport-Security headers please read into this topic first.
                #add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
                add_header X-Content-Type-Options nosniff;
                add_header X-Frame-Options "SAMEORIGIN";
                add_header X-XSS-Protection "1; mode=block";
                add_header X-Robots-Tag none;
                add_header X-Download-Options noopen;
                add_header X-Permitted-Cross-Domain-Policies none;
                # Optional: Don't log access to assets
                access_log off;
            }
            #
            location ~ \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg|map)$ {
                add_header Cache-Control "public, max-age=7200";
                try_files $uri /index.php$uri$is_args$args;
                # Optional: Don't log access to other assets
                access_log off;
            }
            # php-fpm ping and status.
            location ~ ^/(phpstatus|ping)$ {
                fastcgi_pass   owncloud-php:9000;
                fastcgi_index  index.php;
                fastcgi_param PATH_TRANSLATED $document_root$fastcgi_script_name;
                include        fastcgi_params;
            }
        }
    }

>>

redirectHost(host, parent, vars) ::= <<
        server {
            root /var/www/html;
            server_name <host>;
            return 301 https://<first(vars.nginx.hosts)>$request_uri;
        }
>>

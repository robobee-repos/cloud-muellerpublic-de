/*
 * Mandatory:
 *
 * vars.owncloud.image.name
 * vars.owncloud.image.version
 * vars.owncloud.php.memoryLimit
 * vars.owncloud.php.maxExecutionTime
 * vars.owncloud.php.maxChildren
 * vars.owncloud.php.startServers
 * vars.owncloud.php.minSpareServers
 * vars.owncloud.php.maxSpareServers
 * vars.owncloud.php.opcacheEnable
 * vars.owncloud.php.opcacheEnableCLI
 * vars.owncloud.php.opcacheMemoryConsumption
 * vars.owncloud.limits.cpu
 * vars.owncloud.limits.memory
 * vars.owncloud.requests.cpu
 * vars.owncloud.requests.memory
 * vars.nginx.image.name
 * vars.nginx.image.version
 * vars.nginx.limits.cpu
 * vars.nginx.limits.memory
 * vars.nginx.requests.cpu
 * vars.nginx.requests.memory
 * 
 * Optional:
 * 
 * vars.owncloud.affinityRequired
 * vars.owncloud.allowOnMaster
 * vars.owncloud.tolerations[].key
 * vars.owncloud.tolerations[].value
 * vars.owncloud.tolerations[].effect
 */

import "affinities.stg"
import "tolerations.stg"

cc-owncloud-deploy-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: Service
metadata:
  name: owncloud
  namespace: cloud-muellerpublic-de
  labels:
    app: owncloud
    tier: frontend
    group: cloud-muellerpublic-de
spec:
  ports:
  - name: "http"
    port: 8080
    targetPort: 8080
  selector:
    app: owncloud

---

apiVersion: v1
kind: Service
metadata:
  name: owncloud-php
  namespace: cloud-muellerpublic-de
  labels:
    app: owncloud
    tier: frontend
    group: cloud-muellerpublic-de
spec:
  ports:
  - name: "php"
    port: 9000
    targetPort: 9000
  selector:
    app: owncloud

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: owncloud
  namespace: cloud-muellerpublic-de
  labels:
    app: owncloud
    tier: frontend
    group: cloud-muellerpublic-de
spec:
  replicas: 1
  selector:
    matchLabels:
      app: owncloud
      tier: frontend
      group: cloud-muellerpublic-de
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: owncloud
        tier: frontend
        group: cloud-muellerpublic-de
    spec:
      containers:
      - image: <vars.owncloud.image.name>:<vars.owncloud.image.version>
        name: owncloud
        env:
        - name: PHP_MEMORY_LIMIT
          value: "<vars.owncloud.php.memoryLimit>"
        - name: PHP_MAX_EXECUTION_TIME
          value: "<vars.owncloud.php.maxExecutionTime>"
        - name: PHP_FPM_MAX_CHILDREN
          value: "<vars.owncloud.php.maxChildren>"
        - name: PHP_FPM_START_SERVERS
          value: "<vars.owncloud.php.startServers>"
        - name: PHP_FPM_MIN_SPARE_SERVERS
          value: "<vars.owncloud.php.minSpareServers>"
        - name: PHP_FPM_MAX_SPARE_SERVERS
          value: "<vars.owncloud.php.maxSpareServers>"
        - name: PHP_OPCACHE_ENABLE
          value: "<vars.owncloud.php.opcacheEnable>"
        - name: PHP_OPCACHE_ENABLE_CLI
          value: "<vars.owncloud.php.opcacheEnableCLI>"
        - name: PHP_OPCACHE_MEMORY_CONSUMPTION
          value: "<vars.owncloud.php.opcacheMemoryConsumption>"
        - name: DB_OWNCLOUD_DB
          valueFrom:
            secretKeyRef:
              name: db
              key: owncloud_db
        - name: DB_OWNCLOUD_USER
          valueFrom:
            secretKeyRef:
              name: db
              key: owncloud_user
        - name: DB_OWNCLOUD_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db
              key: owncloud_password
        ports:
        - containerPort: 9000
          name: "php"
        resources:
          limits:
            cpu: <vars.owncloud.limits.cpu>
            memory: <vars.owncloud.limits.memory>
          requests:
            cpu: <vars.owncloud.requests.cpu>
            memory: <vars.owncloud.requests.memory>
        volumeMounts:
        - mountPath: /var/www/html
          name: cloud-muellerpublic-de
          subPath: html
        - mountPath: /data
          name: cloud-muellerpublic-de
          subPath: data
      - image: <vars.nginx.image.name>:<vars.nginx.image.version>
        name: nginx
        env:
        - name: NGINX_HTTP_PORT
          value: "8080"
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        resources:
          limits:
            cpu: <vars.nginx.limits.cpu>
            memory: <vars.nginx.limits.memory>
          requests:
            cpu: <vars.nginx.requests.cpu>
            memory: <vars.nginx.requests.memory>
        volumeMounts:
        - mountPath: /var/www/html
          name: cloud-muellerpublic-de
          subPath: html
        - mountPath: /nginx-in
          name: nginx-nginx-config
      restartPolicy: Always
      volumes:
      - name: cloud-muellerpublic-de
        persistentVolumeClaim:
          claimName: cloud-muellerpublic-de
      - name: nginx-nginx-config
        configMap:
          name: nginx
<affinitiesGroup(parent, vars, vars.owncloud.affinityRequired)>
<tolerationMaster(parent, vars, vars.owncloud.allowOnMaster)>
<tolerationsGroup(parent, vars, vars.owncloud.tolerations, vars.owncloud.allowOnMaster)>

---

>>
